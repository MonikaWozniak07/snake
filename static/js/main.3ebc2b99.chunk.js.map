{"version":3,"sources":["const.js","Cells.js","Game.js","App.js","index.js"],"names":["ROWS","COLS","CELL","window","matchMedia","matches","addEventListener","e","preventDefault","KEYS","DIRS","37","38","39","40","Cells","board","handleKey","cells","row","col","key","value","className","push","style","width","height","tabIndex","onKeyDown","Game","props","event","direction","nativeEvent","keyCode","diff","Math","abs","state","nextDirection","snake","score","gameOver","start","bind","frame","this","setState","head","getNextIndex","food","length","indexOf","i","maxCells","floor","random","pop","unshift","setTimeout","x","y","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ebc2b99.chunk.js","sourcesContent":["export let ROWS, COLS, CELL;\r\n\r\nfunction resizeBoard(e) {\r\n  e.preventDefault();\r\n  const mediaQuery = window.matchMedia(\"(max-width: 768px)\");\r\n  if (mediaQuery.matches) {\r\n    ROWS = 10;\r\n    COLS = 10;\r\n    CELL = 30;\r\n  } else {\r\n    ROWS = 15;\r\n    COLS = 15;\r\n    CELL = 30;\r\n  }\r\n}\r\nconst mediaQuery = window.matchMedia(\"(max-width: 768px)\");\r\nif (mediaQuery.matches) {\r\n  ROWS = 10;\r\n  COLS = 10;\r\n  CELL = 30;\r\n} else {\r\n  ROWS = 15;\r\n  COLS = 15;\r\n  CELL = 30;\r\n}\r\nwindow.addEventListener(\"resize\", resizeBoard);\r\nexport const BODY = 1,\r\n  FOOD = 2;\r\nexport const START = 44;\r\nexport const KEYS = { left: 37, up: 38, right: 39, down: 40 };\r\nexport const DIRS = { 37: true, 38: true, 39: true, 40: true };\r\n","import React from \"react\";\r\nimport { ROWS, COLS, CELL, BODY, FOOD } from \"./const\";\r\nimport \"./style.css\";\r\nfunction Cells({ board, handleKey }) {\r\n  const cells = [];\r\n\r\n  for (let row = 0; row < ROWS; row++) {\r\n    for (let col = 0; col < COLS; col++) {\r\n      const key = COLS * row + col;\r\n      const value = board[key];\r\n      const className =\r\n        value === BODY ? \"body-cell\" : value === FOOD ? \"food-cell\" : \"cell\";\r\n      cells.push(<div key={key} className={className} />);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"board-container\">\r\n        <div\r\n          style={{ width: COLS * CELL, height: ROWS * CELL }}\r\n          tabIndex={0}\r\n          onKeyDown={handleKey}\r\n          className=\"board\"\r\n        >\r\n          {cells}\r\n        </div>\r\n      </div>\r\n      <footer>\r\n        <p>Developed with ♥ by Monika Woźniak </p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\nexport default Cells;\r\n","import React from \"react\";\r\nimport Cells from \"./Cells\";\r\nimport { START, BODY, KEYS, COLS, ROWS, FOOD, DIRS } from \"./const\";\r\nimport \"./style.css\";\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      board: [],\r\n      snake: [],\r\n      score: -1,\r\n      direction: null,\r\n      gameOver: false,\r\n    };\r\n    this.start = this.start.bind(this);\r\n    this.frame = this.frame.bind(this);\r\n    this.handleKey = this.handleKey.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.start();\r\n  }\r\n\r\n  start() {\r\n    const board = [];\r\n    const snake = [START];\r\n    board[START] = BODY;\r\n    this.setState(\r\n      {\r\n        board,\r\n        snake,\r\n        direction: KEYS.down,\r\n      },\r\n      () => this.frame()\r\n    );\r\n  }\r\n  frame() {\r\n    let { snake, board, direction } = this.state;\r\n    const head = this.getNextIndex(snake[0], direction);\r\n\r\n    const food = board[head] === FOOD || snake.length === 1;\r\n\r\n    if (snake.indexOf(head) !== -1) {\r\n      this.setState({ gameOver: true });\r\n      return;\r\n    }\r\n\r\n    if (food) {\r\n      const maxCells = ROWS * COLS;\r\n      let i;\r\n      do {\r\n        i = Math.floor(Math.random() * maxCells);\r\n      } while (board[i]);\r\n      board[i] = FOOD;\r\n      this.setState({\r\n        score: this.state.score + 1,\r\n      });\r\n    } else {\r\n      board[snake.pop()] = null;\r\n    }\r\n\r\n    board[head] = BODY;\r\n    snake.unshift(head);\r\n\r\n    if (this.nextDirection) {\r\n      direction = this.nextDirection;\r\n      this.nextDirection = null;\r\n    }\r\n\r\n    this.setState(\r\n      {\r\n        board,\r\n        snake,\r\n        direction,\r\n      },\r\n      () => {\r\n        setTimeout(this.frame, 200);\r\n      }\r\n    );\r\n  }\r\n\r\n  handleKey = (event) => {\r\n    const direction = event.nativeEvent.keyCode;\r\n    const diff = Math.abs(this.state.direction - direction);\r\n    if (DIRS[direction] && diff !== 0 && diff !== 2) {\r\n      this.nextDirection = direction;\r\n    }\r\n  };\r\n\r\n  getNextIndex(head, direction) {\r\n    let x = head % COLS;\r\n    let y = Math.floor(head / COLS);\r\n    switch (direction) {\r\n      case KEYS.up:\r\n        y = y <= 0 ? ROWS - 1 : y - 1;\r\n        break;\r\n      case KEYS.down:\r\n        y = y >= ROWS ? 0 : y + 1;\r\n        break;\r\n      case KEYS.left:\r\n        x = x <= 0 ? COLS - 1 : x - 1;\r\n        break;\r\n      case KEYS.right:\r\n        x = x >= COLS - 1 ? 0 : x + 1;\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n    return COLS * y + x;\r\n  }\r\n\r\n  render() {\r\n    const { board, score } = this.state;\r\n    return (\r\n      <>\r\n        <div className=\"text\">\r\n          <p className=\"text-snake\">Snake</p>\r\n          <span className=\"score\">Wynik:{score}</span>\r\n        </div>\r\n        <Cells handleKey={this.handleKey} board={board} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import Game from \"./Game\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}